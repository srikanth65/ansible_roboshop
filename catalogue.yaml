- name: configure catalogue
  hosts: catalogue
  become: yes
  tasks: 
    - name: disable old nodejs and enable nodejs
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
   
    - name: install nodeJS 
      ansible.builtin.dnf: 
        name: nodejs 
        state: present 

    - name: add user roboshop
      ansible.builtin.user: 
        name: roboshop

    - name: remove app directory
      ansible.builtin.file:
        path: /app 
        state: absent
    
    - name: create app directory 
      ansible.builtin.file: 
        path: /app 
        state: directory  

    - name: download application code
      ansible.builtin.get_url: 
        url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
        dest: /tmp

    - name: unarchive
      ansible.builtin.unarchive: 
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes 

    - name: Install dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copy files
      ansible.builtin.copy: 
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name : state present and enabled 
      ansible.builtin.systemd_service:
        daemon_reload: true 

    - name: copy mongo.repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo 

    - name: install mongodb-org-shell
      ansible.builtin.dnf: 
        name: mongodb-org-shell
        state: present 

    - name: get the categories count 
      ansible.builtin.command: mongo --host mongodb.aws2day.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
      register: product_count 

    - name: load schema
      ansible.builtin.command: mongo --host mongodb.aws2day.online </app/schema/catalogue.js
      when: product_count.stdout == "0"

    - name: start and enable catalouge 
      ansible.builtin.service: 
        name: catalogue
        state: restarted 
        enabled: yes 